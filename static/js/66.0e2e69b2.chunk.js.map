{"version":3,"file":"static/js/66.0e2e69b2.chunk.js","mappings":"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","sources":["Pages/CMS/UpDate/UpDate.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { singleApi, updateApi } from \"../../../Toolkit/productSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { product_pic } from \"../../../Helper\";\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function UpDate() {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.product);\r\n  console.log(data.sdata);\r\n  const [image, setImage] = useState();\r\n  useEffect(() => {\r\n    dispatch(singleApi(id));\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (data.sdata) {\r\n      setValue(\"name\", data.sdata.name);\r\n      setValue(\"price\", data.sdata.price);\r\n      setValue(\"description\", data.sdata.description);\r\n      setValue(\"brand\", data.sdata.brand);\r\n    //   setValue(\"image\", data.sdata.image);\r\n    }\r\n  },[data.sdata]);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"name\", data.name);\r\n    formData.append(\"price\", data.price);\r\n    formData.append(\"description\", data.description);\r\n    formData.append(\"brand\", data.brand);\r\n    formData.append(\"image\", data.image[0]);\r\n    dispatch(updateApi({ payload: formData, id }));\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Update Product\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  {...register(\"name\", { required: true })}\r\n                  name=\"name\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  autoFocus\r\n                  error={errors.name}\r\n                  helperText={errors.name && \"name is required\"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  {...register(\"price\", { required: true })}\r\n                  required\r\n                  fullWidth\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  error={errors.price}\r\n                  helperText={errors.price && \"price is required\"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  {...register(\"description\", { required: true })}\r\n                  required\r\n                  fullWidth\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  error={errors.description}\r\n                  helperText={errors.description && \"description is required\"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  {...register(\"brand\", { required: true })}\r\n                  required\r\n                  fullWidth\r\n                  name=\"brand\"\r\n                  id=\"brand\"\r\n                  error={errors.brand}\r\n                  helperText={errors.brand && \"brand is required\"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  {...register(\"image\", { required: true })}\r\n                  required\r\n                  fullWidth\r\n                  name=\"image\"\r\n                  id=\"image\"\r\n                  type=\"file\"\r\n                  onChange={(e) => setImage(e.target.files[0])}\r\n                  error={errors.image}\r\n                  helperText={!image && errors.image && \"image is required\"}\r\n                />\r\n                {image !== \"\" && image !== null && image !== undefined ? (\r\n                  <>\r\n                    <img\r\n                      src={URL.createObjectURL(image)}\r\n                      alt=\"hello world\"\r\n                      height={\"200px\"}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {data.sdata?.image === \"\" ? (\r\n                      <>\r\n                        <img\r\n                          //    src=\"\"\r\n                          alt=\"\"\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <img\r\n                          src={data.sdata?.image}\r\n                          alt=\"hello world\"\r\n                          height={\"200px\"}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            {data.status === \"idle\" ? (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                  Loading...\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"names":["defaultTheme","createTheme","UpDate","_data$sdata","_data$sdata2","id","useParams","dispatch","useDispatch","data","useSelector","state","product","console","log","sdata","image","setImage","useState","useEffect","singleApi","setValue","name","price","description","brand","register","handleSubmit","formState","errors","useForm","_jsx","ThemeProvider","theme","children","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","noValidate","onSubmit","formData","FormData","append","updateApi","payload","mt","Grid","container","spacing","item","xs","sm","TextField","required","fullWidth","autoFocus","error","helperText","type","onChange","e","target","files","undefined","_Fragment","src","URL","createObjectURL","alt","height","status","Button","mb"],"sourceRoot":""}