{"version":3,"file":"static/js/991.f22c6636.chunk.js","mappings":"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","sources":["Pages/Layout/Header/Header.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeToken } from \"../../../Toolkit/authSlice\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport { MenuItem } from \"@mui/material\";\r\n\r\nconst drawerWidth = 240;\r\nconst navItems = [\"Home\", \"Product\", \"Create\"];\r\n\r\nexport default function DrawerAppBar(props) {\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.auth);\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(removeToken());\r\n  };\r\n\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const drawer = (\r\n    <Box onClick={handleDrawerToggle} sx={{ textAlign: \"center\" }}>\r\n      <Typography variant=\"h6\" sx={{ my: 2 }}>\r\n        MUI\r\n      </Typography>\r\n      <Divider />\r\n      <List>\r\n        {data.isLogin === true ? (\r\n          <>\r\n            {navItems.map((item) => (\r\n              <ListItem key={item} disablePadding>\r\n                <ListItemButton\r\n                  sx={{ textAlign: \"center\" }}\r\n                  component={Link}\r\n                  to={`/${item}`}\r\n                >\r\n                  <ListItemText primary={item} />\r\n                </ListItemButton>\r\n              </ListItem>\r\n            ))}\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenNavMenu}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: \"45px\" }}\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n            >\r\n              <MenuItem component={Link} to=\"/\" onClick={handleLogout}>\r\n                Logout\r\n              </MenuItem>\r\n              <MenuItem component={Link} to=\"/update-password\">\r\n                Update Password\r\n              </MenuItem>\r\n            </Menu>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {navItems.map((item) => (\r\n              <ListItem key={item} disablePadding>\r\n                <ListItemButton\r\n                  sx={{ textAlign: \"center\" }}\r\n                  component={Link}\r\n                  to={`/${item}`}\r\n                >\r\n                  <ListItemText primary={item} />\r\n                </ListItemButton>\r\n              </ListItem>\r\n            ))}\r\n            <ListItem disablePadding>\r\n              <ListItemButton\r\n                sx={{ justifyContent: \"center\" }}\r\n                component={Link}\r\n                to={`/`}\r\n              >\r\n                Login\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n      <AppBar component=\"nav\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            MUI\r\n          </Typography>\r\n          {data.isLogin === true ? (\r\n            <>\r\n              <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\r\n                {navItems.map((item) => (\r\n                  <Button\r\n                    key={item}\r\n                    sx={{ color: \"#fff\" }}\r\n                    component={Link}\r\n                    to={`/${item}`}\r\n                  >\r\n                    {item}\r\n                  </Button>\r\n                ))}\r\n                <Tooltip title=\"Open settings\">\r\n                  <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                    <Avatar\r\n                      alt=\"Remy Sharp\"\r\n                      src=\"/static/images/avatar/2.jpg\"\r\n                    />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                  sx={{ mt: \"45px\" }}\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorElUser}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  open={Boolean(anchorElUser)}\r\n                  onClose={handleCloseUserMenu}\r\n                >\r\n                  <MenuItem component={Link} to=\"/\" onClick={handleLogout}>\r\n                    Logout\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} to=\"/update-password\">\r\n                    Update Password\r\n                  </MenuItem>\r\n                </Menu>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\r\n                {navItems.map((item) => (\r\n                  <Button\r\n                    key={item}\r\n                    sx={{ color: \"#fff\" }}\r\n                    component={Link}\r\n                    to={`/${item}`}\r\n                  >\r\n                    {item}\r\n                  </Button>\r\n                ))}\r\n                <Button sx={{ color: \"#fff\" }} component={Link} to=\"/\">\r\n                  Login\r\n                </Button>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav>\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          sx={{\r\n            display: { xs: \"block\", sm: \"none\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </nav>\r\n      <Box component=\"main\" sx={{ p: 3 }}>\r\n        <Toolbar />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["drawerWidth","navItems","DrawerAppBar","props","anchorElUser","setAnchorElUser","React","anchorElNav","setAnchorElNav","dispatch","useDispatch","data","useSelector","state","auth","window","mobileOpen","setMobileOpen","handleDrawerToggle","prevState","handleLogout","removeToken","drawer","_jsxs","Box","onClick","sx","textAlign","children","_jsx","Typography","variant","my","Divider","List","isLogin","_Fragment","map","item","ListItem","disablePadding","ListItemButton","component","Link","to","concat","ListItemText","primary","Tooltip","title","IconButton","event","currentTarget","Avatar","alt","src","Menu","mt","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","handleCloseNavMenu","MenuItem","justifyContent","container","undefined","document","body","display","CssBaseline","AppBar","Toolbar","color","edge","mr","sm","MenuIcon","flexGrow","xs","Button","p","id","handleCloseUserMenu","Drawer","ModalProps","boxSizing","width"],"sourceRoot":""}