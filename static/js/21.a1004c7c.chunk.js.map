{"version":3,"file":"static/js/21.a1004c7c.chunk.js","mappings":"iSAuBA,MAAMA,GAAeC,EAAAA,EAAAA,KAEN,SAASC,IACtB,MAAMC,GAASC,EAAAA,EAAAA,MACPC,GAAKC,EAAAA,EAAAA,KAAaC,GAAQA,EAAMC,OAChCC,GAASC,EAAAA,EAAAA,MACTC,EAAQC,aAAaC,QAAQ,YAC7B,SACFC,EAAQ,aACRC,EAEAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MAsBR,OAZIC,EAAAA,EAAAA,YAAU,KACIC,MACV,MAAMC,EAAST,aAAaC,QAAQ,YAC9BS,EAAgC,qBAA3BC,OAAOC,SAASC,SAC3B,GAAIJ,EACKC,GAASnB,EAAS,IAE3B,EAEFiB,EAAO,GACP,CAACjB,EAASE,EAAKqB,iBAGnBC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAACC,MAAO7B,EAAa8B,UACjCC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIJ,SAAA,EACvCH,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,KACZJ,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACFC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZX,SAAA,EAEFH,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAACL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAAmBd,UAC9CH,EAAAA,EAAAA,KAACkB,EAAAA,EAAgB,OAEnBlB,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CAACb,UAAU,KAAKc,QAAQ,KAAIjB,SAAC,oBAGxCC,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACH,UAAU,OAAOe,SAAUjC,GAtClBV,IAChB,MAAM4C,EAAM,CACR,QAAUtC,EACV,SAAWN,EAAKgB,UAEpBZ,GAASyC,EAAAA,EAAAA,IAAkBD,IAAQE,MAAK,IAAI1C,GAAS2C,EAAAA,EAAAA,QAAe,IAiCVC,YAAU,EAAChB,GAAI,CAAEiB,GAAI,GAAIxB,SAAA,EAE/EH,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,IACNzC,EAAS,WAAW,CAAC0C,UAAS,IAChCC,OAAO,SACPD,UAAQ,EACRE,WAAS,EACTC,KAAK,WACLC,MAAM,WACNC,KAAK,WACLC,GAAG,WACHC,aAAa,mBACbC,MAAO/C,EAAOI,SACd4C,WAAYhD,EAAOI,UAAY,yBAGlB,SAAdhB,EAAK6D,QAAiBvC,EAAAA,EAAAA,KAAAwC,EAAAA,SAAA,CAAArC,UACnBH,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACTP,KAAK,SACLH,WAAS,EACTX,QAAQ,YACRV,GAAI,CAAEiB,GAAI,EAAGe,GAAI,GAAIvC,SACtB,cAGKH,EAAAA,EAAAA,KAAAwC,EAAAA,SAAA,CAAArC,UACFH,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACTP,KAAK,SACLH,WAAS,EACTX,QAAQ,YACRV,GAAI,CAAEiB,GAAI,EAAGe,GAAI,GAAIvC,SACtB,2BAYb,C","sources":["Pages/Auth/UpdatePassword/UpdatePassword.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeToken, updatePasswordApi } from '../../../Toolkit/authSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function UpdatePassword() {\r\n  const navigate=useNavigate()\r\n    const data=useSelector((state)=>state.auth)\r\n    const dispatch=useDispatch()\r\n    const user_id=localStorage.getItem(\"user_id\")\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        \r\n        formState: { errors },\r\n      } = useForm()\r\n    \r\n      const onSubmit = (data) =>{\r\n        const value={\r\n            \"user_id\":user_id,\r\n            \"password\":data.password\r\n        }\r\n        dispatch(updatePasswordApi(value)).then(()=>dispatch(removeToken()))\r\n       \r\n      }\r\n      useEffect(()=>{\r\n        const fetch=()=>{\r\n          const password=localStorage.getItem(\"password\")\r\n          const path=window.location.pathname===\"/update-password\"\r\n          if (password) {\r\n            return path &&  navigate(\"/\")\r\n            \r\n          }\r\n        }\r\n        fetch()\r\n      },[navigate,data.isRedirectToo])\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n          UpdatePassword\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate sx={{ mt: 1 }}>\r\n            \r\n            <TextField\r\n            {...register(\"password\",{required:true})}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              error={errors.password}\r\n              helperText={errors.password && \"password is required\"}\r\n            />\r\n            \r\n            {data.status===\"idle\"?(<>\r\n                <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            </>):(<>\r\n                <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Loading...\r\n            </Button>\r\n\r\n            </>)}\r\n            \r\n          </Box>\r\n        </Box>\r\n       \r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}"],"names":["defaultTheme","createTheme","UpdatePassword","navigate","useNavigate","data","useSelector","state","auth","dispatch","useDispatch","user_id","localStorage","getItem","register","handleSubmit","formState","errors","useForm","useEffect","fetch","password","path","window","location","pathname","isRedirectToo","_jsx","ThemeProvider","theme","children","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","onSubmit","value","updatePasswordApi","then","removeToken","noValidate","mt","TextField","required","margin","fullWidth","name","label","type","id","autoComplete","error","helperText","status","_Fragment","Button","mb"],"sourceRoot":""}